1
00:00:00,040 --> 00:00:03,490 
the following content is provided under
a Creative Commons license

2
00:00:03,490 --> 00:00:07,129 
your support will help MIT
OpenCourseWare continue to offer

3
00:00:07,129 --> 00:00:10,580 
high-quality educational resources for
free

4
00:00:10,580 --> 00:00:14,360 
to make a donation or view additional
materials from hundreds of them IT

5
00:00:14,360 --> 00:00:15,030 
courses

6
00:00:15,030 --> 00:00:18,110 
visit MIT OpenCourseWare at 0 CW

7
00:00:18,110 --> 00:00:25,110 
that MIT that EDU ha the

8
00:00:29,040 --> 00:00:34,030 
the

9
00:00:34,030 --> 00:00:40,680 
the in

10
00:00:40,680 --> 00:00:47,680 
the new the in the last lecture we
discussed discrete-time processing of

11
00:00:58,960 --> 00:00:60,519 
continuous-time signals

12
00:00:60,519 --> 00:01:04,879 
and as you know the basis for that
arises essentially out at the sampling

13
00:01:04,879 --> 00:01:09,450 
there now in that context and also in
its own right

14
00:01:09,450 --> 00:01:12,770 
another important sampling issue is

15
00:01:12,770 --> 00:01:18,039 
the sampling love discrete-time signals
in other words the sampling a sequence

16
00:01:18,039 --> 00:01:22,240 
one comic context in which this arises
for example

17
00:01:22,240 --> 00:01:25,909 
is if we've converted from a
continuous-time signal

18
00:01:25,909 --> 00:01:29,440 
to a sequence and we then

19
00:01:29,440 --> 00:01:33,929 
carry out some additional filtering then
there's the possibility

20
00:01:33,929 --> 00:01:37,340 
day we can re sable that sequence and as
we'll see as we go through the

21
00:01:37,340 --> 00:01:38,200 
discussion

22
00:01:38,200 --> 00:01:41,450 
save something in the way of storage or
whatever

23
00:01:41,450 --> 00:01:45,049 
so discrete-time sampling

24
00:01:45,049 --> 00:01:48,899 
as a indicated has important application

25
00:01:48,899 --> 00:01:52,890 
in a context referred to here namely re
sampling

26
00:01:52,890 --> 00:01:56,399 
after discrete-time filtering and

27
00:01:56,399 --> 00:02:00,109 
closely related to that as well indicate
in this lecture

28
00:02:00,109 --> 00:02:04,090 
is the concept love using discrete time
sampling

29
00:02:04,090 --> 00:02:07,399 
for what's referred to as sampling rate

30
00:02:07,399 --> 00:02:10,929 
conversion and also closely

31
00:02:10,929 --> 00:02:15,150 
associated with both those ideas is a

32
00:02:15,150 --> 00:02:19,590 
set of ideas that I'll bring up in
today's lecture referred to as

33
00:02:19,590 --> 00:02:24,370 
decimation and interpolation love
discrete-time signals are sequences

34
00:02:24,370 --> 00:02:27,940 
now the basic process for

35
00:02:27,940 --> 00:02:33,470 
discrete-time sampling is the same as it
is for continuous-time sampling

36
00:02:33,470 --> 00:02:37,359 
namely we can analyze it and set it up

37
00:02:37,359 --> 00:02:40,709 
on the basis love multiplying or
modulating

38
00:02:40,709 --> 00:02:44,489 
a discrete-time signal by an impulse
train

39
00:02:44,489 --> 00:02:48,620 
the impulse train essentially or pulse
train pulling out

40
00:02:48,620 --> 00:02:51,940 
sequence values at the times that we
want to sample

41
00:02:51,940 --> 00:02:56,340 
so the basic block diagram for the
sampling process

42
00:02:56,340 --> 00:03:00,139 
is to modulator multiply

43
00:03:00,139 --> 00:03:03,669 
the sequence that we want to sample by

44
00:03:03,669 --> 00:03:07,019 
an impulse train and here

45
00:03:07,019 --> 00:03:10,269 
near Paul strain has imposed a space by

46
00:03:10,269 --> 00:03:15,470 
integer multiples of capital N this then
becomes the sampling period

47
00:03:15,470 --> 00:03:19,100 
and the result is that modulation is
then

48
00:03:19,100 --> 00:03:23,859 
the sample sequence X appear vent so

49
00:03:23,859 --> 00:03:29,229 
if we just look at what a sequence in a
sample version of that sequence might

50
00:03:29,229 --> 00:03:29,889 
look like

51
00:03:29,889 --> 00:03:35,530 
well we have here is an original
sequence exit Van

52
00:03:35,530 --> 00:03:38,759 
and then we have the

53
00:03:38,759 --> 00:03:42,699 
sampling imposed strain or sampling
sequence

54
00:03:42,699 --> 00:03:46,709 
and it's the modulation or product if
these two

55
00:03:46,709 --> 00:03:50,579 
that gives us the sample sequence X
appear van

56
00:03:50,579 --> 00:03:54,250 
and so as you can see multiplying this
by this

57
00:03:54,250 --> 00:03:58,780 
essentially pulls out love the original
sequence

58
00:03:58,780 --> 00:04:02,440 
sample values at the times that this
post rain is on

59
00:04:02,440 --> 00:04:07,430 
and of course here I've drawn as for the
case where capital and

60
00:04:07,430 --> 00:04:10,489 
the sampling period is equal to 3

61
00:04:10,489 --> 00:04:13,590 
now the

62
00:04:13,590 --> 00:04:17,030 
analysis love discrete-time sampling is

63
00:04:17,030 --> 00:04:21,340 
very similar to the analysis of
continuous-time sampling

64
00:04:21,340 --> 00:04:27,520 
and let's just quickly look through the
steps that are involved where

65
00:04:27,520 --> 00:04:32,220 
modulating are multiplying in the time
domain and what that corresponds to

66
00:04:32,220 --> 00:04:35,979 
in the frequency domain is a convolution
and

67
00:04:35,979 --> 00:04:39,350 
so be spectrum

68
00:04:39,350 --> 00:04:42,389 
love the sample sequence

69
00:04:42,389 --> 00:04:46,039 
is the periodic convolution love the
spectrum

70
00:04:46,039 --> 00:04:49,520 
love the sampling sequence and

71
00:04:49,520 --> 00:04:54,210 
the spectrum love the sequence that were
sampling

72
00:04:54,210 --> 00:04:59,670 
and since the sampling sequences in
Nepal strain

73
00:04:59,670 --> 00:05:03,520 
as we know the 48 transform over Nepal
strain

74
00:05:03,520 --> 00:05:08,710 
is itself an impulse train and so this
is the Fourier transform

75
00:05:08,710 --> 00:05:11,990 
love the sampling sequence

76
00:05:11,990 --> 00:05:16,220 
and now finally the four EA transform

77
00:05:16,220 --> 00:05:20,810 
love the resulting sample sequence being
the convolution

78
00:05:20,810 --> 00:05:26,290 
love this with the Fourier transform the
sequence that were sampling

79
00:05:26,290 --> 00:05:31,650 
gives us then spectrum which consists of
a some

80
00:05:31,650 --> 00:05:36,080 
love replicated versions of the Fourier
transform above the sequence that were

81
00:05:36,080 --> 00:05:37,970 
sampling

82
00:05:37,970 --> 00:05:42,400 
in other words what we're doing very
much as we did in continuous-time

83
00:05:42,400 --> 00:05:47,100 
is through the sampling process when we
look at it in the frequency domain

84
00:05:47,100 --> 00:05:51,470 
taking the spectrum all the sequester
were sampling

85
00:05:51,470 --> 00:05:54,530 
and shifting it and then adding it in

86
00:05:54,530 --> 00:05:58,910 
shifting it by editor multiples of the
sampling frequency

87
00:05:58,910 --> 00:06:02,300 
in particular looking back at this
equation

88
00:06:02,300 --> 00:06:05,930 
what we recognize is that this term

89
00:06:05,930 --> 00:06:09,950 
k times to pile over capital and is in
fact

90
00:06:09,950 --> 00:06:14,460 
integer multiple love the sampling
frequency

91
00:06:14,460 --> 00:06:17,570 
and the same thing is true here this

92
00:06:17,570 --> 00:06:21,139 
is K times Omega so badass

93
00:06:21,139 --> 00:06:24,790 
where Omega so badass the sampling
frequency

94
00:06:24,790 --> 00:06:30,560 
is to pie divided by capital and

95
00:06:30,560 --> 00:06:34,190 
alright so now let's look at what this
means

96
00:06:34,190 --> 00:06:37,530 
pictorially are graphically in the
frequency domain

97
00:06:37,530 --> 00:06:40,660 
and as you can imagine since the
analysis

98
00:06:40,660 --> 00:06:45,430 
and algebra is similar to what happens
in continuous-time

99
00:06:45,430 --> 00:06:49,210 
we would expect the pictures to more or
less be identical to

100
00:06:49,210 --> 00:06:52,260 
what we've seen previously for
continuous-time and indeed that's the

101
00:06:52,260 --> 00:06:53,660 
case

102
00:06:53,660 --> 00:06:56,919 
so here we have the

103
00:06:56,919 --> 00:07:00,460 
spectrum love the signal that were
sampling

104
00:07:00,460 --> 00:07:06,200 
this is for EA transform with an assumed
highest frequency of Omega Savannah M

105
00:07:06,200 --> 00:07:09,440 
highest frequency over to fire a range
or over Ranger

106
00:07:09,440 --> 00:07:14,410 
higher at their and now the spectrum of
the

107
00:07:14,410 --> 00:07:17,889 
sampling signal is

108
00:07:17,889 --> 00:07:21,090 
what I show below which is an impulse
train

109
00:07:21,090 --> 00:07:25,310 
with impulses occurring at multiples
integer multiples of the sampling

110
00:07:25,310 --> 00:07:27,260 
frequency

111
00:07:27,260 --> 00:07:30,490 
and fan finally the convolution

112
00:07:30,490 --> 00:07:33,490 
up these two is simply this: one

113
00:07:33,490 --> 00:07:37,930 
replicated at the locations if these
impulses

114
00:07:37,930 --> 00:07:41,610 
and so that's finally what I show below

115
00:07:41,610 --> 00:07:46,280 
and here are chosen one I've made one
particular choice

116
00:07:46,280 --> 00:07:50,710 
for the sampling period this in
particular corresponds to

117
00:07:50,710 --> 00:07:54,760 
a sampling period which is

118
00:07:54,760 --> 00:07:58,919 
capitol lawn equal to

119
00:07:58,919 --> 00:08:02,930 
three and so the sampling frequency

120
00:08:02,930 --> 00:08:06,270 
Omega so badass is to pie

121
00:08:06,270 --> 00:08:09,460 
divided by three

122
00:08:09,460 --> 00:08:14,310 
right now when we look at this what we
recognize

123
00:08:14,310 --> 00:08:18,270 
is dead we have basically the same issue
here

124
00:08:18,270 --> 00:08:21,870 
as we had in continuous time in the
sense that

125
00:08:21,870 --> 00:08:28,490 
when these individual replications of
the 48 transform

126
00:08:28,490 --> 00:08:31,880 
when a fit when the sampling frequency
is chosen high enough so that they don't

127
00:08:31,880 --> 00:08:33,120 
overlap

128
00:08:33,120 --> 00:08:37,539 
than we see the potential for being able
to get one of them back

129
00:08:37,539 --> 00:08:41,130 
on the other hand when they do overlap
then what will have

130
00:08:41,130 --> 00:08:44,209 
is a daily as saying in particular
discrete-time aliasing

131
00:08:44,209 --> 00:08:48,050 
much as we had continuous time a leasing
in the continuous-time case

132
00:08:48,050 --> 00:08:51,180 
well notice in this picture dead

133
00:08:51,180 --> 00:08:55,600 
what we have is we've chosen this
pictures so that

134
00:08:55,600 --> 00:08:59,370 
Omega sieve ass minus Omega 7 a.m.

135
00:08:59,370 --> 00:09:05,230 
is greater than Omega Savannah am work
with alertly so that Omega Sebastian is

136
00:09:05,230 --> 00:09:06,560 
greater than

137
00:09:06,560 --> 00:09:10,220 
to Omega to Omega

138
00:09:10,220 --> 00:09:16,160 
so am and so with Omega serve as greater
than 20 may get to them that corresponds

139
00:09:16,160 --> 00:09:17,720 
to this picture

140
00:09:17,720 --> 00:09:21,449 
whereas if that condition is violated

141
00:09:21,449 --> 00:09:24,720 
than in fact the picture that we would
have

142
00:09:24,720 --> 00:09:28,920 
is a picture that looks like this and in
this picture

143
00:09:28,920 --> 00:09:33,740 
the individual replications of the four
EA transform

144
00:09:33,740 --> 00:09:38,589 
of the original signal overlap and we
can no longer

145
00:09:38,589 --> 00:09:43,009 
recover the for EA transform the
original signal

146
00:09:43,009 --> 00:09:46,779 
and this just as it was in
continuous-time

147
00:09:46,779 --> 00:09:50,819 
is referred to as alias

148
00:09:50,819 --> 00:09:56,559 
now let's look more closely at the
situation in which there is no aliasing

149
00:09:56,559 --> 00:10:00,579 
and so in that case

150
00:10:00,579 --> 00:10:05,079 
what we have is a Fourier transform

151
00:10:05,079 --> 00:10:08,389 
for the sampled

152
00:10:08,389 --> 00:10:13,189 
signal which is as i indicated here

153
00:10:13,189 --> 00:10:16,369 
and the Fourier transform for the
original signal

154
00:10:16,369 --> 00:10:19,769 
as i indicated at the top and

155
00:10:19,769 --> 00:10:23,649 
the question now is how do we recover
this one from this one

156
00:10:23,649 --> 00:10:28,480 
well the way that we do that just as we
did in a continuous-time case

157
00:10:28,480 --> 00:10:32,519 
is by low-pass filtering in particular

158
00:10:32,519 --> 00:10:36,279 
processing in the time domain or in the
frequency domain

159
00:10:36,279 --> 00:10:40,199 
this where and idea low-pass filter

160
00:10:40,199 --> 00:10:43,339 
has the effect of extracting that part

161
00:10:43,339 --> 00:10:47,779 
the spectrum dead in fact we identify

162
00:10:47,779 --> 00:10:50,990 
with the original signal that we

163
00:10:50,990 --> 00:10:55,079 
began so

164
00:10:55,079 --> 00:10:59,079 
what we see it again is that the process
is very much the same as long as there's

165
00:10:59,079 --> 00:11:00,300 
no aliasing

166
00:11:00,300 --> 00:11:03,540 
we can recover the original signal by

167
00:11:03,540 --> 00:11:06,740 
ideal low-pass filtering so

168
00:11:06,740 --> 00:11:09,860 
the overall system is

169
00:11:09,860 --> 00:11:13,309 
just to reiterate a system which

170
00:11:13,309 --> 00:11:16,660 
consists love modulating

171
00:11:16,660 --> 00:11:19,910 
the original sequence with

172
00:11:19,910 --> 00:11:22,959 
appall strainer and Paul strain

173
00:11:22,959 --> 00:11:27,160 
and then that is going to be processed

174
00:11:27,160 --> 00:11:30,389 
with a low-pass filter

175
00:11:30,389 --> 00:11:34,160 
the spectrum love the original signal X
a van

176
00:11:34,160 --> 00:11:40,009 
is what I show here the spectrum of the
sampled signal where I'm drawing the

177
00:11:40,009 --> 00:11:43,639 
picture on the assumption that the
sampling period is 3

178
00:11:43,639 --> 00:11:46,990 
is now what's indicated where these are
replicated

179
00:11:46,990 --> 00:11:50,339 
where the original spectrum is
replicated

180
00:11:50,339 --> 00:11:54,459 
this is now processed through a filter

181
00:11:54,459 --> 00:11:57,779 
which for exact reconstruction

182
00:11:57,779 --> 00:12:01,179 
is an ideal low-pass filter

183
00:12:01,179 --> 00:12:04,790 
and so we would multiply this spectrum
by this one

184
00:12:04,790 --> 00:12:08,829 
and the result after doing that will
generate

185
00:12:08,829 --> 00:12:12,749 
a reconstructed spectrum which in fact
is identical

186
00:12:12,749 --> 00:12:16,569 
to the original so the time domain

187
00:12:16,569 --> 00:12:21,490 
picture is the same I'm sorry the
frequency domain pictures the same

188
00:12:21,490 --> 00:12:24,790 
and what we would expect and is that the
time to me

189
00:12:24,790 --> 00:12:29,369 
picture would be the same well lets in
fact look at the time domain

190
00:12:29,369 --> 00:12:32,800 
and in the time domain what we have

191
00:12:32,800 --> 00:12:38,350 
is an analysis more less identical to
what we had in continuous-time

192
00:12:38,350 --> 00:12:41,350 
we've course have the same system

193
00:12:41,350 --> 00:12:45,290 
and in the time domain we r multiplying

194
00:12:45,290 --> 00:12:48,730 
by an impulse train consequently

195
00:12:48,730 --> 00:12:52,639 
the sample sequence is

196
00:12:52,639 --> 00:12:55,949 
and impose train whose values are

197
00:12:55,949 --> 00:13:01,379 
samples affects a van at integer
multiples of capital and

198
00:13:01,379 --> 00:13:04,779 
for the reconstruction this is

199
00:13:04,779 --> 00:13:10,209 
now process through idea low-pass filter

200
00:13:10,209 --> 00:13:13,869 
and that implements the convolution in
the time domain

201
00:13:13,869 --> 00:13:17,389 
and so the reconstructed signal is the
convolution

202
00:13:17,389 --> 00:13:20,420 
of the sample sequence and

203
00:13:20,420 --> 00:13:23,459 
the filter impulse response and

204
00:13:23,459 --> 00:13:26,970 
expressed another way namely writing at
the convolution is

205
00:13:26,970 --> 00:13:30,959 
some we have this expression and so it
says then

206
00:13:30,959 --> 00:13:33,999 
that the reconstruction is carried out

207
00:13:33,999 --> 00:13:38,959 
by replacing the impulses here

208
00:13:38,959 --> 00:13:42,949 
these impulses by versions of the

209
00:13:42,949 --> 00:13:47,290 
filter impulse response

210
00:13:47,290 --> 00:13:52,059 
well if the filter is an ideal 0 pass
filter

211
00:13:52,059 --> 00:13:56,850 
then that corresponds in the time domain
to assign an ex

212
00:13:56,850 --> 00:14:01,269 
over sin x kinda function and that is
the interpolation

213
00:14:01,269 --> 00:14:05,730 
in between the samples to do the
reconstruction

214
00:14:05,730 --> 00:14:10,399 
also as is discussed some white in the
text we can

215
00:14:10,399 --> 00:14:13,569 
consider other kinds of interpolation
for example

216
00:14:13,569 --> 00:14:18,619 
discrete-time zero-order hold or
discreet I first-order whole just as we

217
00:14:18,619 --> 00:14:20,399 
had in continuous-time

218
00:14:20,399 --> 00:14:24,249 
and the issues and analysis for the
discrete-time zero-order hold the

219
00:14:24,249 --> 00:14:25,629 
first-order hold

220
00:14:25,629 --> 00:14:30,790 
are very similar to what they were in
continuous-time the zero-order hold

221
00:14:30,790 --> 00:14:34,209 
just simply holding the value until the
next sampling instant

222
00:14:34,209 --> 00:14:38,029 
and the first-order hold carrying out
linear interpolation

223
00:14:38,029 --> 00:14:42,389 
in between the samples

224
00:14:42,389 --> 00:14:46,399 
now in this sampling process

225
00:14:46,399 --> 00:14:51,079 
if we look again at the way forms
involved

226
00:14:51,079 --> 00:14:54,869 
or sequences involved the process
consisted

227
00:14:54,869 --> 00:14:57,929 
love taking a sequence

228
00:14:57,929 --> 00:15:01,069 
and extracting from it

229
00:15:01,069 --> 00:15:06,069 
individual bad news and

230
00:15:06,069 --> 00:15:10,920 
in between those values we have
sequenced values equal to 0

231
00:15:10,920 --> 00:15:14,089 
so what we're doing in this case

232
00:15:14,089 --> 00:15:17,600 
is retaining

233
00:15:17,600 --> 00:15:21,029 
the same number sequence values and
simply setting

234
00:15:21,029 --> 00:15:25,189 
some number of them equal to 0

235
00:15:25,189 --> 00:15:29,319 
well let's say for example that we want
to carry out

236
00:15:29,319 --> 00:15:33,569 
sampling and what we're talking about is
sequence and let's say the sequence

237
00:15:33,569 --> 00:15:36,170 
stored in a computer memory

238
00:15:36,170 --> 00:15:39,610 
as you can imagine the notion love
sampling it

239
00:15:39,610 --> 00:15:43,769 
and actually replacing some with the
values by zero

240
00:15:43,769 --> 00:15:47,389 
is somewhat inefficient namely it
doesn't make sense to think of storing

241
00:15:47,389 --> 00:15:49,269 
the memory a lot of zeros

242
00:15:49,269 --> 00:15:52,399 
when in fact those zeros that we can
always put back in

243
00:15:52,399 --> 00:15:56,569 
we know exactly with the values are and
if we know what the sampling

244
00:15:56,569 --> 00:15:59,879 
rate was in discrete-time then we would
know

245
00:15:59,879 --> 00:16:03,059 
when and how to put the zeros back in

246
00:16:03,059 --> 00:16:07,009 
so actually in discrete-time sampling

247
00:16:07,009 --> 00:16:10,079 
what we've talked about so far is really
only one

248
00:16:10,079 --> 00:16:13,759 
part for one step in the process
basically the other

249
00:16:13,759 --> 00:16:17,559 
step is to take those zeros just throw
them away because

250
00:16:17,559 --> 00:16:22,089 
we can put them in any time we want to
and really only retained for example

251
00:16:22,089 --> 00:16:26,799 
in our computer memory or less than
sequence values or whatever

252
00:16:26,799 --> 00:16:30,839 
only retain the non-zero values

253
00:16:30,839 --> 00:16:35,519 
so that process and the resulting
sequence that we end up with

254
00:16:35,519 --> 00:16:38,999 
is associated with a concept called
estimation

255
00:16:38,999 --> 00:16:42,049 
what I mean by destination is very
simple

256
00:16:42,049 --> 00:16:45,449 
what we're doing is instead of working
with

257
00:16:45,449 --> 00:16:50,170 
this sequence we're going to work with
this sequence

258
00:16:50,170 --> 00:16:53,389 
namely well toss out zeros

259
00:16:53,389 --> 00:16:56,980 
in between here and collapse the
sequence

260
00:16:56,980 --> 00:17:00,259 
down only to the sequence values

261
00:17:00,259 --> 00:17:03,799 
that are associated with the original X
event

262
00:17:03,799 --> 00:17:07,490 
now in talking about a decimated
sequence

263
00:17:07,490 --> 00:17:12,420 
we could of course do that directly from
misstep down to hear

264
00:17:12,420 --> 00:17:15,670 
although again in the analysis it will
be somewhat

265
00:17:15,670 --> 00:17:19,040 
more convenient to carry that out by

266
00:17:19,040 --> 00:17:23,839 
thinking at least analytically interns
with two step process

267
00:17:23,839 --> 00:17:27,000 
one being a sampling process then the
other being

268
00:17:27,000 --> 00:17:30,290 
the destination but basically this is

269
00:17:30,290 --> 00:17:33,610 
decimated version %uh that now

270
00:17:33,610 --> 00:17:37,600 
for the grammatical purists out there

271
00:17:37,600 --> 00:17:41,450 
the word estimation of course means
taking every 10 won the implication is

272
00:17:41,450 --> 00:17:42,840 
not dead

273
00:17:42,840 --> 00:17:46,559 
were always sampling with a period of 10
the idea decimating

274
00:17:46,559 --> 00:17:52,630 
is to pick out every and sample and end
up with a collapsed sequence

275
00:17:52,630 --> 00:17:56,940 
right now let's now look at a little bit
in the analysis

276
00:17:56,940 --> 00:18:02,700 
and understand what the consequences in
the frequency domain

277
00:18:02,700 --> 00:18:05,860 
in particular what we want to develop is

278
00:18:05,860 --> 00:18:10,120 
how the Fourier transform the decimated
sequence

279
00:18:10,120 --> 00:18:13,440 
is related to the Fourier transform

280
00:18:13,440 --> 00:18:16,470 
of the original sequence or the sample
sequence

281
00:18:16,470 --> 00:18:20,870 
so let's look at this in the frequency
domain

282
00:18:20,870 --> 00:18:23,870 
and so what we have is a

283
00:18:23,870 --> 00:18:27,480 
decimated sequence which consists

284
00:18:27,480 --> 00:18:32,260 
love pulling out every capital and bad
you affect the van

285
00:18:32,260 --> 00:18:36,429 
and of course that's in the same as we
can either decimate x7

286
00:18:36,429 --> 00:18:40,710 
or we can decimate the sample sick

287
00:18:40,710 --> 00:18:45,000 
now in going through this analysis

288
00:18:45,000 --> 00:18:48,549 
all kinda go through it quickly because
again

289
00:18:48,549 --> 00:18:51,769 
there's the issue with some slight
mental gymnastics and if

290
00:18:51,769 --> 00:18:56,720 
you're anything like I am it's usually
best to kinda try to absorb at

291
00:18:56,720 --> 00:19:00,419 
by yourself quietly rather than having
somebody throw it at you

292
00:19:00,419 --> 00:19:03,740 
let let me say though that that the
steps that are following here are

293
00:19:03,740 --> 00:19:05,169 
slightly different

294
00:19:05,169 --> 00:19:08,630 
and the steps that I use in the tax is
slightly different wave

295
00:19:08,630 --> 00:19:13,260 
I'll going through the analysis I guess
you could say for one thing that

296
00:19:13,260 --> 00:19:16,990 
if we go through it twice and it comes
out the same well of course it has to be

297
00:19:16,990 --> 00:19:18,880 
right

298
00:19:18,880 --> 00:19:22,919 
well anyway a here we have

299
00:19:22,919 --> 00:19:26,210 
then the relationship between the
decimated sequence

300
00:19:26,210 --> 00:19:29,299 
the original sequence and the

301
00:19:29,299 --> 00:19:32,519 
sample sequence and we know of course
that

302
00:19:32,519 --> 00:19:35,549 
the Fourier transform love the sample
sequence

303
00:19:35,549 --> 00:19:39,240 
is just simply this nation and now

304
00:19:39,240 --> 00:19:42,610 
the kinda the idea in the analysis is

305
00:19:42,610 --> 00:19:45,700 
that we can collapse this summation

306
00:19:45,700 --> 00:19:49,169 
by recognizing bat this

307
00:19:49,169 --> 00:19:52,570 
term is only non-zero

308
00:19:52,570 --> 00:19:57,309 
at every and value and so if we do that

309
00:19:57,309 --> 00:20:01,789 
essentially making a substitution
variables with an equal to small and

310
00:20:01,789 --> 00:20:03,269 
times capital and

311
00:20:03,269 --> 00:20:06,279 
we can turn this into a summation on am

312
00:20:06,279 --> 00:20:10,070 
and that's what I've done here and

313
00:20:10,070 --> 00:20:13,870 
we've just simply use the fact that we
can collapse the some

314
00:20:13,870 --> 00:20:20,120 
because the fact is dead that all but
every and values equal to 0

315
00:20:20,120 --> 00:20:23,990 
so this then is the Fourier transform
all the sample

316
00:20:23,990 --> 00:20:29,990 
signal and now if we look at the Fourier
transform of the

317
00:20:29,990 --> 00:20:35,580 
decimated signal that for EA transform
of course is this summation

318
00:20:35,580 --> 00:20:38,630 
on the decimated sequence

319
00:20:38,630 --> 00:20:42,460 
well what we want to look at is a
correspondence between this equation and

320
00:20:42,460 --> 00:20:43,799 
the one above it

321
00:20:43,799 --> 00:20:47,789 
so we want to compare this equation to
this one

322
00:20:47,789 --> 00:20:52,440 
and recognizing that this decimated
sequences just simply

323
00:20:52,440 --> 00:20:57,720 
related to the sample sequence this way

324
00:20:57,720 --> 00:21:01,350 
these two become equal under

325
00:21:01,350 --> 00:21:04,509 
a substitution variables in particular
notice

326
00:21:04,509 --> 00:21:07,740 
that if we replace in

327
00:21:07,740 --> 00:21:11,179 
this equation Omega by

328
00:21:11,179 --> 00:21:16,159 
Omega times capital and and these two
equations become equal

329
00:21:16,159 --> 00:21:21,139 
so the consequences that then what it
all boils down to and says

330
00:21:21,139 --> 00:21:25,850 
is that the relationship between the

331
00:21:25,850 --> 00:21:29,970 
decimated the Fourier transform the
decimated sequence

332
00:21:29,970 --> 00:21:34,019 
and the Fourier transform the sample
sequence is simply

333
00:21:34,019 --> 00:21:37,130 
a frequency scaling corresponding

334
00:21:37,130 --> 00:21:40,610 
to dividing the frequency axis by
capital and

335
00:21:40,610 --> 00:21:44,909 
so thats essentially what happens that's
really all

336
00:21:44,909 --> 00:21:48,059 
that's involved in the destination
process and now

337
00:21:48,059 --> 00:21:52,559 
again let's look at that pictorially and
see what it means

338
00:21:52,559 --> 00:21:56,809 
so what we want to look at now that
we've looked in the time domain

339
00:21:56,809 --> 00:22:00,100 
in this particular you graph we

340
00:22:00,100 --> 00:22:04,440 
now wanna look in the frequency-domain

341
00:22:04,440 --> 00:22:07,750 
and in the frequency domain we have

342
00:22:07,750 --> 00:22:11,070 
again the

343
00:22:11,070 --> 00:22:15,700 
Fourier transform of the original
sequence

344
00:22:15,700 --> 00:22:19,019 
and we have the Fourier transform

345
00:22:19,019 --> 00:22:23,350 
or the sample sequence

346
00:22:23,350 --> 00:22:26,590 
and now the 48 transform of the

347
00:22:26,590 --> 00:22:29,590 
decimated sequence is simply this

348
00:22:29,590 --> 00:22:34,820 
spectrum with a linear frequency scaling

349
00:22:34,820 --> 00:22:39,450 
and in particular it's simply car
sponsor multiplying this frequency axis

350
00:22:39,450 --> 00:22:41,059 
by capital and

351
00:22:41,059 --> 00:22:45,230 
and notice noticed that this frequency
now

352
00:22:45,230 --> 00:22:48,490 
to pry or capital and that frequency

353
00:22:48,490 --> 00:22:51,850 
ends up getting rescaled

354
00:22:51,850 --> 00:22:55,779 
to a frequency love to pie

355
00:22:55,779 --> 00:22:59,759 
so in fact now in the rescaling

356
00:22:59,759 --> 00:23:03,009 
its at this point in the decimation

357
00:23:03,009 --> 00:23:07,210 
gets rescaled to this point

358
00:23:07,210 --> 00:23:10,440 
and correspondingly of course the sole
spectrum

359
00:23:10,440 --> 00:23:13,539 
broadens out now we can also look at
that

360
00:23:13,539 --> 00:23:18,230 
in the context of the original spectrum
and you can see that the relationship

361
00:23:18,230 --> 00:23:23,000 
between the original spectrum and the
spectrum the decimated signal

362
00:23:23,000 --> 00:23:26,710 
corresponds to simply linearly scaling

363
00:23:26,710 --> 00:23:29,880 
yes but it's important also

364
00:23:29,880 --> 00:23:34,529 
to keep in mind dead that analysis

365
00:23:34,529 --> 00:23:38,580 
that particular relationship assumes
that we've avoided aliasing

366
00:23:38,580 --> 00:23:42,639 
the relationship between the specter the
decimated signal

367
00:23:42,639 --> 00:23:47,529 
and the spectra the sample signal is
true whether or not we have a leasing

368
00:23:47,529 --> 00:23:51,039 
but being able to clearly associated
with

369
00:23:51,039 --> 00:23:54,409 
just simply scaling love this spectrum

370
00:23:54,409 --> 00:23:58,059 
the original signal assumes that the
spectrum

371
00:23:58,059 --> 00:24:01,870 
the original signal shape the shape of
it is preserved

372
00:24:01,870 --> 00:24:06,620 
when we generate the sample sick

373
00:24:06,620 --> 00:24:12,929 
okay well when my eight discrete-time
sampling and for that matter decimation

374
00:24:12,929 --> 00:24:18,279 
the use well i indicated one context in
which it might be useful

375
00:24:18,279 --> 00:24:21,879 
at the beginning at this lecture and let
me now focusing on that

376
00:24:21,879 --> 00:24:25,750 
a little more specifically

377
00:24:25,750 --> 00:24:29,250 
in particular suppose that we have

378
00:24:29,250 --> 00:24:33,259 
going through a process

379
00:24:33,259 --> 00:24:40,179 
in which the a continuous-time signal
has been converted to a discrete-time

380
00:24:40,179 --> 00:24:41,720 
signal

381
00:24:41,720 --> 00:24:44,899 
and we then carry out some additional
discrete-time

382
00:24:44,899 --> 00:24:49,730 
filtering so we have a situation where
we've gone through a continuous to

383
00:24:49,730 --> 00:24:52,740 
discrete-time conversion

384
00:24:52,740 --> 00:24:57,529 
and after that conversion we carry out
some discrete-time

385
00:24:57,529 --> 00:25:01,139 
filtering and so

386
00:25:01,139 --> 00:25:05,139 
and in particular and going through this
part of the process

387
00:25:05,139 --> 00:25:08,190 
we choose the sampling rate for

388
00:25:08,190 --> 00:25:12,230 
going from the continuous-time signal to
the sequence

389
00:25:12,230 --> 00:25:15,710 
so that we don't violate the sampling
there

390
00:25:15,710 --> 00:25:19,059 
well let's suppose then that this is the
spectrum

391
00:25:19,059 --> 00:25:22,289 
love the continuous time signal

392
00:25:22,289 --> 00:25:25,889 
below it we have the spectrum love

393
00:25:25,889 --> 00:25:31,179 
the output of the continuous and
discrete-time conversion

394
00:25:31,179 --> 00:25:34,389 
and I've chosen the sampling frequency

395
00:25:34,389 --> 00:25:38,870 
to be just high end of so that I avoid
aliasing

396
00:25:38,870 --> 00:25:41,909 
okay well

397
00:25:41,909 --> 00:25:46,659 
that then is the the lower sampling
frequency I can pick

398
00:25:46,659 --> 00:25:51,879 
but now if we go through some additional
ok pass filtering

399
00:25:51,879 --> 00:25:55,789 
then let's see what happens if I now

400
00:25:55,789 --> 00:25:59,659 
low-pass filter the sequence XFN then

401
00:25:59,659 --> 00:26:03,370 
in effect on multiplying the sequence

402
00:26:03,370 --> 00:26:06,470 
spectrum by this filter

403
00:26:06,470 --> 00:26:11,710 
and so the result of that the product
though the filter frequency response

404
00:26:11,710 --> 00:26:15,809 
and the Fourier transform exit then
would have a shape

405
00:26:15,809 --> 00:26:20,120 
somewhat like I indicate below

406
00:26:20,120 --> 00:26:23,990 
now notice that in this spectrum

407
00:26:23,990 --> 00:26:30,990 
although in this the input to the filter
this entire band was filled up

408
00:26:31,149 --> 00:26:35,210 
in the output the filter there is a band

409
00:26:35,210 --> 00:26:40,100 
that is in fact up zero a that has zero
energy and

410
00:26:40,100 --> 00:26:43,250 
so what I can consider doing is

411
00:26:43,250 --> 00:26:46,299 
taking the output sequence from the
filter

412
00:26:46,299 --> 00:26:49,629 
and in fact we see a planet in other
words

413
00:26:49,629 --> 00:26:54,210 
sampling it which would be more less
associated with a different sampling

414
00:26:54,210 --> 00:26:54,750 
rate

415
00:26:54,750 --> 00:26:58,519 
in the for the continuous-time signals
involved

416
00:26:58,519 --> 00:27:01,679 
so I could now go through a process

417
00:27:01,679 --> 00:27:05,259 
which is commonly referred to as down
sampling that is

418
00:27:05,259 --> 00:27:09,490 
lowering the sampling rate when we do
that of course what's going to happen

419
00:27:09,490 --> 00:27:13,409 
is that in fact this spectral energy
will now

420
00:27:13,409 --> 00:27:16,870 
fill out more love the band and

421
00:27:16,870 --> 00:27:20,970 
for example if I if this was the third
then

422
00:27:20,970 --> 00:27:24,690 
in fact if I down sampled by a factor of
three then

423
00:27:24,690 --> 00:27:28,340 
I would fill up the entire band with
this energy but since I've done some

424
00:27:28,340 --> 00:27:31,289 
additional 0 pass filtering as i
indicate here

425
00:27:31,289 --> 00:27:35,470 
there's no problem with aliasing if

426
00:27:35,470 --> 00:27:39,750 
I had let's say down sample by a factor
of three and I'm now taking that signal

427
00:27:39,750 --> 00:27:43,279 
and can bring it back to a
continuous-time signal

428
00:27:43,279 --> 00:27:47,879 
then course the way I can't do that is
by simply running

429
00:27:47,879 --> 00:27:52,779 
my output clock for the discrete to
continuous-time converter

430
00:27:52,779 --> 00:27:56,639 
I can run my app but clock at a third
the rate

431
00:27:56,639 --> 00:28:03,570 
love the input clock and that in effect
takes care the bookkeeping for me

432
00:28:03,570 --> 00:28:06,970 
okay so here we have now

433
00:28:06,970 --> 00:28:10,600 
the notion love sampling a sequence

434
00:28:10,600 --> 00:28:15,309 
and very closely tied in with that the
notion of decimating a sequence

435
00:28:15,309 --> 00:28:18,740 
and related to both of those the notion
love

436
00:28:18,740 --> 00:28:21,999 
down sampling that is changing the
sampling

437
00:28:21,999 --> 00:28:26,629 
rate so that if we were tying this in
with continuous-time signals

438
00:28:26,629 --> 00:28:30,159 
we've essentially changed our clock
grade

439
00:28:30,159 --> 00:28:34,110 
and we might also want to and it's
important to

440
00:28:34,110 --> 00:28:37,509 
considered the opposite of that so

441
00:28:37,509 --> 00:28:41,519 
now a question is what's an opposite
what's the opposite destination suppose

442
00:28:41,519 --> 00:28:43,220 
that we had a sequence

443
00:28:43,220 --> 00:28:47,799 
we decimated thinking about it as a
two-step process

444
00:28:47,799 --> 00:28:51,980 
that would correspond to first
multiplying by an impulse train where

445
00:28:51,980 --> 00:28:53,330 
there are bunches zeros

446
00:28:53,330 --> 00:28:58,200 
in the air and then choosing throwing
away the zeros in keeping only the

447
00:28:58,200 --> 00:28:59,269 
values that

448
00:28:59,269 --> 00:29:03,360 
are 90 because the zeros we can always
recreate

449
00:29:03,360 --> 00:29:07,340 
well in fact the inverse process is very
specifically a process

450
00:29:07,340 --> 00:29:10,470 
love recreating the zeros and then

451
00:29:10,470 --> 00:29:14,009 
doing that the sampling so in

452
00:29:14,009 --> 00:29:19,169 
the opposite operation

453
00:29:19,169 --> 00:29:22,490 
what we would do is undue

454
00:29:22,490 --> 00:29:25,620 
the decimation step and

455
00:29:25,620 --> 00:29:29,419 
that would consist of converting the
decimated sequence

456
00:29:29,419 --> 00:29:33,399 
back to an impulse train

457
00:29:33,399 --> 00:29:37,129 
and then processing that imposed strain

458
00:29:37,129 --> 00:29:41,249 
by ideal low-pass filter

459
00:29:41,249 --> 00:29:45,220 
to do the interpolation or
reconstruction

460
00:29:45,220 --> 00:29:49,179 
filling in the values which in this
imposed strain

461
00:29:49,179 --> 00:29:52,230 
are equal to 0 so

462
00:29:52,230 --> 00:29:55,399 
we now have the two steps we take the
decimated sequence

463
00:29:55,399 --> 00:29:58,889 
we expanded out putting in 000's

464
00:29:58,889 --> 00:30:02,970 
and then we the sample that by
processing it

465
00:30:02,970 --> 00:30:06,070 
through a low-pass filter so just

466
00:30:06,070 --> 00:30:11,320 
have looking at sequences again

467
00:30:11,320 --> 00:30:15,269 
what we have is an original

468
00:30:15,269 --> 00:30:19,019 
sequence the secret sex if an and

469
00:30:19,019 --> 00:30:23,039 
then the sample sequence is simply a
sequence

470
00:30:23,039 --> 00:30:28,299 
which alternates in this particular case
those sequence values 0

471
00:30:28,299 --> 00:30:31,450 
here what we're seeing is that the

472
00:30:31,450 --> 00:30:35,639 
sampling rate is that that the sampling
period is 2

473
00:30:35,639 --> 00:30:40,169 
and so every other value here is equal
to 0

474
00:30:40,169 --> 00:30:44,059 
the decimated sequence then is this
sequence

475
00:30:44,059 --> 00:30:48,179 
collapsed as a show in the sequence
above

476
00:30:48,179 --> 00:30:51,639 
and so it's in effect I'm compressing

477
00:30:51,639 --> 00:30:54,840 
the sample sequence or the original
sequence

478
00:30:54,840 --> 00:30:58,509 
so that we throw out the sequence value
Z

479
00:30:58,509 --> 00:31:02,490 
which were equal to 0 in the sample
sequence

480
00:31:02,490 --> 00:31:07,029 
now in recovering the original sequence
from the decimated sequence

481
00:31:07,029 --> 00:31:10,100 
we can think up a two-step process
namely

482
00:31:10,100 --> 00:31:13,129 
we spread this out

483
00:31:13,129 --> 00:31:17,960 
alternating with zeros and again keeping
in mind that this is drawn for the case

484
00:31:17,960 --> 00:31:19,940 
where capitalists to

485
00:31:19,940 --> 00:31:23,330 
and then finally we interpolate between

486
00:31:23,330 --> 00:31:26,860 
the non-zero values here by going
through

487
00:31:26,860 --> 00:31:30,529 
a low-pass filter to reconstruct the

488
00:31:30,529 --> 00:31:33,889 
original sequence and that's what we
show

489
00:31:33,889 --> 00:31:37,190 
finally on the bottom curve so

490
00:31:37,190 --> 00:31:40,490 
that's what we would see in the time
domain let's

491
00:31:40,490 --> 00:31:43,990 
look at what we would see in the
frequency domain

492
00:31:43,990 --> 00:31:48,399 
in the frequency domain we have to begin
with

493
00:31:48,399 --> 00:31:51,619 
the sequence on the bottom or the
spectrum on the bottom

494
00:31:51,619 --> 00:31:56,409 
which would correspond to the original
spectrum

495
00:31:56,409 --> 00:32:00,720 
then through the sampling process that
is periodically replicated

496
00:32:00,720 --> 00:32:04,330 
again this is drawn on the assumption
that the

497
00:32:04,330 --> 00:32:09,460 
sampling frequency is pie or the
sampling period is equal to 2

498
00:32:09,460 --> 00:32:13,139 
and so this is now replicated and

499
00:32:13,139 --> 00:32:16,330 
then in going from this to the

500
00:32:16,330 --> 00:32:20,409 
spectrum love the decimated sequence

501
00:32:20,409 --> 00:32:23,429 
we would rescale the frequency axis

502
00:32:23,429 --> 00:32:27,840 
so that the frequency hi now gets
rescaled

503
00:32:27,840 --> 00:32:31,440 
in the spectrum for the decimated
sequence

504
00:32:31,440 --> 00:32:36,440 
to a frequency which is to pie and so
this now is the spectrum

505
00:32:36,440 --> 00:32:39,850 
love the decimated sequence if we now

506
00:32:39,850 --> 00:32:43,470 
want to re convert to the original

507
00:32:43,470 --> 00:32:49,029 
sequence we would first interspersed in
the time domain with zeros

508
00:32:49,029 --> 00:32:54,559 
corresponding to compressing in the
frequency domain

509
00:32:54,559 --> 00:32:57,860 
that this would then be low-pass
filtered

510
00:32:57,860 --> 00:33:01,629 
and the low-pass filtering would consist

511
00:33:01,629 --> 00:33:05,499 
love throwing away this replication
accounting for

512
00:33:05,499 --> 00:33:08,850 
a factor which is the factor capital and
and

513
00:33:08,850 --> 00:33:13,119 
extracting the portion of the spectrum
which is associated

514
00:33:13,119 --> 00:33:16,429 
with the spectrum love

515
00:33:16,429 --> 00:33:20,690 
the original signal which we began with
so

516
00:33:20,690 --> 00:33:24,440 
once again you can we have decimation
and interpolation

517
00:33:24,440 --> 00:33:29,159 
and the decimation can be thought I love

518
00:33:29,159 --> 00:33:32,200 
as a time compression corresponds to

519
00:33:32,200 --> 00:33:35,850 
frequency expansion and and the
interpolation

520
00:33:35,850 --> 00:33:41,090 
process is then just the reverse

521
00:33:41,090 --> 00:33:46,399 
now there are lot to situations in which
decimation and interpolation

522
00:33:46,399 --> 00:33:49,619 
and discrete-time sampling are useful
and

523
00:33:49,619 --> 00:33:53,710 
one context that I just want to quickly
draw your attention to

524
00:33:53,710 --> 00:33:57,299 
is the use the decimation and
interpolation in

525
00:33:57,299 --> 00:34:01,490 
what is commonly referred to as sampling
rate conversion

526
00:34:01,490 --> 00:34:07,039 
what the basic issue in sampling rate
conversion is is that

527
00:34:07,039 --> 00:34:10,159 
in some situations in a very common one
is

528
00:34:10,159 --> 00:34:15,330 
digital audio continuous-time signals
sample

529
00:34:15,330 --> 00:34:18,830 
and those sample values are stored or
whatever

530
00:34:18,830 --> 00:34:23,869 
and kinda the notion is that that
perhaps when that is played back

531
00:34:23,869 --> 00:34:28,560 
its playback through a different system
and a different system has

532
00:34:28,560 --> 00:34:33,520 
a different assumed sampling frequency
your sampling period

533
00:34:33,520 --> 00:34:36,639 
so that's kind of the issue in the idea

534
00:34:36,639 --> 00:34:40,840 
we have but say a continuous-time signal

535
00:34:40,840 --> 00:34:45,060 
which we've converted to a sequence
through a sampling process

536
00:34:45,060 --> 00:34:48,860 
using innocent sampling period if t1

537
00:34:48,860 --> 00:34:53,250 
and the sequence values made in for
example

538
00:34:53,250 --> 00:34:56,480 
be put into digital storage in the case

539
00:34:56,480 --> 00:35:01,360 
have a digital audio system it may for
example go on to a digital record

540
00:35:01,360 --> 00:35:05,080 
in and it might be the output of this
that we want

541
00:35:05,080 --> 00:35:08,640 
to recreate or we might in fact

542
00:35:08,640 --> 00:35:12,320 
follow that with some additional
processing

543
00:35:12,320 --> 00:35:15,720 
whatever that additional processing is
an all kinda put a

544
00:35:15,720 --> 00:35:21,050 
question mark in there because we don't
know exactly what that might be

545
00:35:21,050 --> 00:35:24,790 
and then in any case the result is that

546
00:35:24,790 --> 00:35:28,160 
is going to be converted back to

547
00:35:28,160 --> 00:35:31,730 
a continuous-time signal but

548
00:35:31,730 --> 00:35:35,000 
it might be converted through a system

549
00:35:35,000 --> 00:35:38,350 
that has a different assumed

550
00:35:38,350 --> 00:35:41,980 
sampling period and so

551
00:35:41,980 --> 00:35:47,140 
a very common issue and it comes up as i
indicated particularly in digital audio

552
00:35:47,140 --> 00:35:51,340 
a very common issue is to be able to
convert

553
00:35:51,340 --> 00:35:54,930 
from wanna soon sampling period

554
00:35:54,930 --> 00:35:57,940 
t1r sampling frequency to

555
00:35:57,940 --> 00:36:01,280 
another soon sampling period now

556
00:36:01,280 --> 00:36:05,290 
how would we do that well in fact we do
that by using

557
00:36:05,290 --> 00:36:09,110 
the ideas of decimation and
interpolation

558
00:36:09,110 --> 00:36:12,650 
in particular if we had for example

559
00:36:12,650 --> 00:36:16,230 
the situation where we wanted to convert
from

560
00:36:16,230 --> 00:36:20,620 
sampling period t+1 to sampling period

561
00:36:20,620 --> 00:36:24,110 
which was twice as long as they're at
then

562
00:36:24,110 --> 00:36:27,570 
essentially we got we're going to take
the sequence

563
00:36:27,570 --> 00:36:30,570 
and process it in a way

564
00:36:30,570 --> 00:36:34,510 
that would in effect correspond to
assuming that we had sample

565
00:36:34,510 --> 00:36:38,260 
at half the original frequency well how
do we do that the way we do it

566
00:36:38,260 --> 00:36:43,490 
is we take the sequence we have we just
throw away every other bad

567
00:36:43,490 --> 00:36:48,560 
so in that case we would then for this
sampling rate conversion

568
00:36:48,560 --> 00:36:52,350 
down sample an decime or

569
00:36:52,350 --> 00:36:55,870 
actually we might not go through this
step formally we might just simply

570
00:36:55,870 --> 00:36:57,500 
destiny

571
00:36:57,500 --> 00:37:01,880 
now we might have an alternative
situation

572
00:37:01,880 --> 00:37:06,540 
where in fact the new sampling period
sampling purity at put is

573
00:37:06,540 --> 00:37:10,070 
half the sampling period the input
corresponding

574
00:37:10,070 --> 00:37:15,510 
to soon sampling frequency which is
twice as high

575
00:37:15,510 --> 00:37:21,190 
and in that case then that we would go
through a process of interpolation and

576
00:37:21,190 --> 00:37:22,430 
in particular we were

577
00:37:22,430 --> 00:37:27,790 
up sample and interpolate by a factor of
two to one

578
00:37:27,790 --> 00:37:33,080 
so in one case were simply throwing away
every other value in the other case what

579
00:37:33,080 --> 00:37:35,140 
we're going to do is take our sequence

580
00:37:35,140 --> 00:37:39,460 
putting zeros put it through a low-pass
filter to interpolate

581
00:37:39,460 --> 00:37:44,110 
now like would be simple if everything
happen in simple integer amounts like

582
00:37:44,110 --> 00:37:45,030 
that

583
00:37:45,030 --> 00:37:48,910 
more common situation is that we may
have

584
00:37:48,910 --> 00:37:52,400 
and assumed output sampling period

585
00:37:52,400 --> 00:37:57,260 
which is three heads above the input
sampling period

586
00:37:57,260 --> 00:38:00,810 
and now the question is what are we
going to do to convert from this

587
00:38:00,810 --> 00:38:02,060 
sampling period

588
00:38:02,060 --> 00:38:05,110 
to this sampling period well

589
00:38:05,110 --> 00:38:09,850 
in fact the answer to that is to use a
combination

590
00:38:09,850 --> 00:38:14,270 
all down sampling and up sampling or up
sampling and down sampling

591
00:38:14,270 --> 00:38:17,420 
covertly interpolation decimation

592
00:38:17,420 --> 00:38:21,500 
and for this particular case in fact
what we would do

593
00:38:21,500 --> 00:38:24,700 
is to first take the data

594
00:38:24,700 --> 00:38:28,340 
up sample by a factor of two

595
00:38:28,340 --> 00:38:31,610 
and then down sample the result of that

596
00:38:31,610 --> 00:38:35,360 
by a factor of three and what that would
give us

597
00:38:35,360 --> 00:38:38,570 
is a sampling rate conversion overall

598
00:38:38,570 --> 00:38:42,720 
love three hands or sampling period
conversion three here's

599
00:38:42,720 --> 00:38:46,860 
and more generally what you could think
of is how you might do this

600
00:38:46,860 --> 00:38:51,230 
if in general the relationship between
the

601
00:38:51,230 --> 00:38:54,590 
input and output sampling periods with
some rational number:

602
00:38:54,590 --> 00:38:58,360 
P over Q and so in fact in many

603
00:38:58,360 --> 00:39:02,450 
systems and hardware systems related to
digital audio

604
00:39:02,450 --> 00:39:06,350 
very often the sampling rate conversion
most typically the same thing rate

605
00:39:06,350 --> 00:39:07,620 
conversion is done

606
00:39:07,620 --> 00:39:12,380 
through apostle process up sampling or
interpolating

607
00:39:12,380 --> 00:39:18,230 
and then down sampling by some other now

608
00:39:18,230 --> 00:39:22,700 
right now what we've seen we've talked
about in

609
00:39:22,700 --> 00:39:26,080 
in a set of lectures is

610
00:39:26,080 --> 00:39:29,840 
the concepts love sampling a signal

611
00:39:29,840 --> 00:39:33,610 
and what we've seen is that the signal
can be represented by samples under

612
00:39:33,610 --> 00:39:35,140 
certain conditions

613
00:39:35,140 --> 00:39:38,250 
and the sampling that we've been talking
about is sampling

614
00:39:38,250 --> 00:39:41,620 
in the time domain we've done that for
continuous-time

615
00:39:41,620 --> 00:39:45,130 
we've done it for discrete-time

616
00:39:45,130 --> 00:39:49,220 
now we know that their is some type a
duality

617
00:39:49,220 --> 00:39:52,600 
both continuous-time and discrete-time
some type a duality

618
00:39:52,600 --> 00:39:56,190 
between the time-domain and
frequency-domain and so is you can

619
00:39:56,190 --> 00:39:57,610 
imagine

620
00:39:57,610 --> 00:40:01,240 
we can also talk about sampling

621
00:40:01,240 --> 00:40:05,380 
in the frequency domain and expected

622
00:40:05,380 --> 00:40:10,000 
more or less the kinda properties and
analysis

623
00:40:10,000 --> 00:40:15,430 
will be similar to those related to
sampling in the time domain

624
00:40:15,430 --> 00:40:18,910 
well i wanna talk just briefly about
that

625
00:40:18,910 --> 00:40:22,970 
and leave the more detailed discussion

626
00:40:22,970 --> 00:40:26,560 
to the text and video course manual

627
00:40:26,560 --> 00:40:29,980 
but let me indicate for example one
context in which

628
00:40:29,980 --> 00:40:33,550 
frequency-domain sampling is important
suppose that

629
00:40:33,550 --> 00:40:37,150 
you have signal and what you'd like to

630
00:40:37,150 --> 00:40:41,770 
measure is it's for a a transformer
spectra

631
00:40:41,770 --> 00:40:46,140 
well course if you want to measure it
are calculated

632
00:40:46,140 --> 00:40:49,560 
you can never do that exactly and every
single frequency there too many

633
00:40:49,560 --> 00:40:52,280 
frequencies namely an infinite number of
them

634
00:40:52,280 --> 00:40:56,700 
and so in fact all that you can really
calculator measure

635
00:40:56,700 --> 00:40:59,950 
are is the 48 transform data set

636
00:40:59,950 --> 00:41:03,440 
love sample frequency so essentially

637
00:41:03,440 --> 00:41:06,570 
if you are going to look at a spectrum

638
00:41:06,570 --> 00:41:11,080 
continuous-time and discrete-time you
can only really look at samples

639
00:41:11,080 --> 00:41:14,230 
and a reasonable question to ask Dan is

640
00:41:14,230 --> 00:41:17,500 
when does a set of samples in fact

641
00:41:17,500 --> 00:41:20,910 
tell you everything that there is to
know about

642
00:41:20,910 --> 00:41:24,080 
the Fourier transform thats that

643
00:41:24,080 --> 00:41:27,850 
in the answer to that is very closely
related to the concept

644
00:41:27,850 --> 00:41:31,120 
a frequency-domain sample

645
00:41:31,120 --> 00:41:34,540 
well frequency-domain sampling just to
kinda introduce

646
00:41:34,540 --> 00:41:37,540 
the topic car spines

647
00:41:37,540 --> 00:41:40,990 
and can be analyzed interns love

648
00:41:40,990 --> 00:41:45,690 
doing modulation in the frequency domain

649
00:41:45,690 --> 00:41:49,330 
very much like the modulation that we
carried out in the time domain for

650
00:41:49,330 --> 00:41:51,120 
time-domain sampling

651
00:41:51,120 --> 00:41:55,640 
and so we would multiply the Fourier
transform

652
00:41:55,640 --> 00:41:59,090 
love the signal was for

653
00:41:59,090 --> 00:42:02,090 
spectrum is to be sampled by

654
00:42:02,090 --> 00:42:05,940 
an impulse train in frequency and so

655
00:42:05,940 --> 00:42:10,510 
shown below is what might be a
representative

656
00:42:10,510 --> 00:42:13,650 
spectrum for the input signal

657
00:42:13,650 --> 00:42:17,480 
and the spectrum then for the

658
00:42:17,480 --> 00:42:21,650 
signal associated with the
frequency-domain sampling

659
00:42:21,650 --> 00:42:25,290 
consists love multiplying the
frequency-domain

660
00:42:25,290 --> 00:42:29,800 
by this impulse train or correspondingly

661
00:42:29,800 --> 00:42:32,820 
the for EA transform love

662
00:42:32,820 --> 00:42:36,390 
the resulting signal is an impulse train

663
00:42:36,390 --> 00:42:40,350 
in frequency with an envelope

664
00:42:40,350 --> 00:42:43,850 
which is the original spectrum that we
were

665
00:42:43,850 --> 00:42:48,240 
sampling well this of course is what we
would do

666
00:42:48,240 --> 00:42:52,450 
in the frequency domain its modulation
by Nepal strain

667
00:42:52,450 --> 00:42:55,700 
what does this mean in the time domain

668
00:42:55,700 --> 00:42:59,680 
well let's see multiplication in the
time domain is convolution in the

669
00:42:59,680 --> 00:43:01,080 
frequency domain

670
00:43:01,080 --> 00:43:04,600 
convolution the frequency domain is
multiplication

671
00:43:04,600 --> 00:43:07,660 
I'm sorry multiplication the frequency
domain and is

672
00:43:07,660 --> 00:43:12,450 
convolution the time to me and in fact
the process in the time domain is a

673
00:43:12,450 --> 00:43:14,110 
convolution process

674
00:43:14,110 --> 00:43:17,200 
namely the time domain signal is

675
00:43:17,200 --> 00:43:20,780 
replicated and

676
00:43:20,780 --> 00:43:25,990 
time an integer amounts love a
particular time associated with the

677
00:43:25,990 --> 00:43:28,020 
spacing in frequency

678
00:43:28,020 --> 00:43:31,350 
under which we doing the
frequency-domain sampling

679
00:43:31,350 --> 00:43:34,370 
so in fact if we look at this

680
00:43:34,370 --> 00:43:39,220 
in the time domain

681
00:43:39,220 --> 00:43:43,900 
the resulting picture corresponds to

682
00:43:43,900 --> 00:43:50,100 
an original signal whose spectrum or
Fourier transform we've sampled

683
00:43:50,100 --> 00:43:53,850 
and a consequence if the sampling is
dead

684
00:43:53,850 --> 00:43:56,900 
The Associated time domain signal

685
00:43:56,900 --> 00:44:02,410 
is just like the original signal but
periodically replicated in time now not

686
00:44:02,410 --> 00:44:04,450 
frequency but in time

687
00:44:04,450 --> 00:44:08,430 
at integer multiples up to par I divided
by

688
00:44:08,430 --> 00:44:12,760 
the spectral sampling interval Omega 0

689
00:44:12,760 --> 00:44:17,780 
and so this then is the time function
associated with

690
00:44:17,780 --> 00:44:21,730 
the sample frequency function now

691
00:44:21,730 --> 00:44:25,550 
that's not surprising because what we've
done is generated

692
00:44:25,550 --> 00:44:29,680 
a and impose train and frequency with a
certain on below

693
00:44:29,680 --> 00:44:34,220 
we know that the important post Raina
frequencies the Fourier transform

694
00:44:34,220 --> 00:44:39,210 
love a periodic time function and so in
fact we have a periodic time function

695
00:44:39,210 --> 00:44:43,220 
we also know that the envelope all those
impulses we

696
00:44:43,220 --> 00:44:47,680 
we know this from way back with when we
talked about for you transforms

697
00:44:47,680 --> 00:44:51,070 
the envelope in fact is the Fourier
transform one period

698
00:44:51,070 --> 00:44:54,800 
and so all of this of course fits
together as it should in a consistent

699
00:44:54,800 --> 00:44:56,600 
way

700
00:44:56,600 --> 00:44:59,650 
now given dead we have

701
00:44:59,650 --> 00:45:04,190 
is periodic time function whose Fourier
transform is

702
00:45:04,190 --> 00:45:07,810 
the samples in the frequency domain how
do we get back

703
00:45:07,810 --> 00:45:11,410 
the original time function well

704
00:45:11,410 --> 00:45:15,430 
with time-domain sampling what we did

705
00:45:15,430 --> 00:45:19,330 
was to multiplying the frequency-domain

706
00:45:19,330 --> 00:45:24,020 
by agape or window to extract that part
of the spectrum

707
00:45:24,020 --> 00:45:27,820 
what we do here is exactly the same
thing

708
00:45:27,820 --> 00:45:31,470 
namely multiply in the time domain by

709
00:45:31,470 --> 00:45:35,350 
a time window which extracts just one
period

710
00:45:35,350 --> 00:45:39,160 
his periodic signal which with then give
us back

711
00:45:39,160 --> 00:45:42,900 
the original signal that we started with

712
00:45:42,900 --> 00:45:45,960 
now also let's keep in mind going back

713
00:45:45,960 --> 00:45:49,730 
to this spectrum and the related sorry
this time function in the relationship

714
00:45:49,730 --> 00:45:51,100 
between them

715
00:45:51,100 --> 00:45:56,110 
that again there is the potential if
this time function is too long

716
00:45:56,110 --> 00:45:59,930 
in relation to 2pi divided by Omega 0

717
00:45:59,930 --> 00:46:03,260 
there's the potential for these two
overlap and so

718
00:46:03,260 --> 00:46:08,430 
what this means is that in fact what we
can end up with

719
00:46:08,430 --> 00:46:12,150 
if the sample spacing a frequency is not
small enough

720
00:46:12,150 --> 00:46:16,040 
well we can end up with isn't overlap in
the replication

721
00:46:16,040 --> 00:46:20,540 
in the time domain and what that
corresponds to an what's called

722
00:46:20,540 --> 00:46:23,700 
is in fact time a lease so

723
00:46:23,700 --> 00:46:28,270 
we can apply merely saying with
frequency-domain sampling just as we can

724
00:46:28,270 --> 00:46:28,870 
have

725
00:46:28,870 --> 00:46:33,440 
frequency alias saying with time to meet
Sam

726
00:46:33,440 --> 00:46:37,430 
finally let me just indicate very
quickly that

727
00:46:37,430 --> 00:46:40,550 
although we're not going through this in
any detail

728
00:46:40,550 --> 00:46:44,810 
the same basic idea applies in
discrete-time

729
00:46:44,810 --> 00:46:49,000 
namely if we have a discrete-time signal

730
00:46:49,000 --> 00:46:52,220 
and if the discrete-time signal

731
00:46:52,220 --> 00:46:55,900 
is a finite length if we sample

732
00:46:55,900 --> 00:46:59,130 
its forty-eight transform the

733
00:46:59,130 --> 00:47:02,660 
the type function associated with those
samples

734
00:47:02,660 --> 00:47:05,980 
is a periodic replication

735
00:47:05,980 --> 00:47:09,200 
and we can now extract from

736
00:47:09,200 --> 00:47:12,610 
this periodic signal the original signal

737
00:47:12,610 --> 00:47:16,060 
by multiplying by an appropriate time
window

738
00:47:16,060 --> 00:47:19,620 
the product if that giving us the
reconstructed time

739
00:47:19,620 --> 00:47:24,740 
function as I indicate below

740
00:47:24,740 --> 00:47:30,110 
so we've now seen a little bit love the
notion of frequency-domain sampling as

741
00:47:30,110 --> 00:47:30,640 
well as

742
00:47:30,640 --> 00:47:33,650 
time-domain sampling and let me stress
that although

743
00:47:33,650 --> 00:47:37,930 
I haven't gone into this and a lot of
detail its

744
00:47:37,930 --> 00:47:40,990 
important it's used very often its

745
00:47:40,990 --> 00:47:44,350 
naturally important to understand it but
in fact

746
00:47:44,350 --> 00:47:48,280 
there is so much to ality between the
time-domain and frequency-domain

747
00:47:48,280 --> 00:47:51,510 
that a thorough understanding of
time-domain sampling just naturally

748
00:47:51,510 --> 00:47:52,790 
leads to

749
00:47:52,790 --> 00:47:58,510 
a thorough understanding a
frequency-domain sample

750
00:47:58,510 --> 00:48:01,720 
all right now we talk a lot about
sampling

751
00:48:01,720 --> 00:48:06,810 
and this now concludes our discussion
sampling

752
00:48:06,810 --> 00:48:10,640 
I stress many times in the lectures
associated with this

753
00:48:10,640 --> 00:48:17,640 
dead sampling is a very important topic
in the context of our whole discussion

754
00:48:17,670 --> 00:48:21,190 
in part because the poor for such an
important bridge between

755
00:48:21,190 --> 00:48:25,590 
continuous-time and discrete-time ideas
and your picture now she can to be a

756
00:48:25,590 --> 00:48:26,970 
global one

757
00:48:26,970 --> 00:48:31,050 
that sees how continuous-time and
discrete-time fit together

758
00:48:31,050 --> 00:48:36,520 
not just analytically but also
practically

759
00:48:36,520 --> 00:48:40,350 
beginning in the next lecture what I
will introduce

760
00:48:40,350 --> 00:48:43,880 
is the a-plus transform

761
00:48:43,880 --> 00:48:49,270 
and beyond that busy transform and what
those will correspond to

762
00:48:49,270 --> 00:48:52,940 
are generalizations are the Fourier
transform

763
00:48:52,940 --> 00:48:57,200 
so we now want to turn our attention
back to some analytical tools

764
00:48:57,200 --> 00:49:00,530 
in particular developing some
generalizations

765
00:49:00,530 --> 00:49:05,680 
love the Fourier transform in both
continuous-time and discrete-time

766
00:49:05,680 --> 00:49:10,640 
and what we'll see is those that those
generalizations

767
00:49:10,640 --> 00:49:15,320 
providers with considerably enhanced
flexibility

768
00:49:15,320 --> 00:49:19,880 
in dealing with and analyzing both
signals and linear time-invariant

769
00:49:19,880 --> 00:49:21,200 
systems

770
00:49:21,200 --> 00:49:21,450 
thank you

